{"remainingRequest":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/docs/impressum.md","dependencies":[{"path":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/docs/impressum.md","mtime":1593609004344},{"path":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/.docusaurus/docusaurus-plugin-content-docs/site-docs-impressum-md-bfe.json","mtime":1594044737447},{"path":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/pragmalingu.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL21pcmlhbS9wcmFnbWFsaW5ndS5naXRodWIuaW8vcHJhZ21hbGluZ3UuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvVXNlcnMvbWlyaWFtL3ByYWdtYWxpbmd1LmdpdGh1Yi5pby9wcmFnbWFsaW5ndS5naXRodWIuaW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17aWQ6J2ltcHJlc3N1bScsdGl0bGU6J0ltcHJlc3N1bSd9O2V4cG9ydCB2YXIgbWV0YWRhdGE9eyJpZCI6ImltcHJlc3N1bSIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJJbXByZXNzdW0iLCJkZXNjcmlwdGlvbiI6IkFuZ2FiZW4gZ2Vtw6TDnyDCpyA1IFRNRyIsInNvdXJjZSI6IkBzaXRlL2RvY3MvaW1wcmVzc3VtLm1kIiwicGVybWFsaW5rIjoiL2RvY3MvaW1wcmVzc3VtIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9wcmFnbWFsaW5ndS9wcmFnbWFsaW5ndS9kb2NzL2ltcHJlc3N1bS5tZCJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1bXTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCwiQW5nYWJlbiBnZW1ceEU0XHhERiBceEE3IDUgVE1HIiksbWR4KCJwIixudWxsLCJTYW15IEF0ZWlhIC0gU29mdHdhcmUgRW5naW5lZXJpbmciLG1keCgiYnIiLHtwYXJlbnROYW1lOiJwIn0pLCJcbiIsIkNhcmwtVGhpZWwtU3RyLiA1IixtZHgoImJyIix7cGFyZW50TmFtZToicCJ9KSwiXG4iLCI5MzA1MyBSZWdlbnNidXJnIiksbWR4KCJwIixudWxsLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJWZXJ0cmV0ZW4gZHVyY2g6IiksbWR4KCJiciIse3BhcmVudE5hbWU6InAifSksIlxuIiwiU2FteSBBdGVpYSIpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiS29udGFrdDoiKSxtZHgoImJyIix7cGFyZW50TmFtZToicCJ9KSwiXG4iLCJUZWxlZm9uOiAwODkgMzU2NDc4IDg3IixtZHgoImJyIix7cGFyZW50TmFtZToicCJ9KSwiXG4iLCJFLU1haWw6ICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Im1haWx0bzppbmZvQHByYWdtYWxpbmd1LmRlIn0pLCJpbmZvQHByYWdtYWxpbmd1LmRlIikpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiVW1zYXR6c3RldWVyLUlEOiIpLG1keCgiYnIiLHtwYXJlbnROYW1lOiJwIn0pLCJcbiIsIkRFMzIzMDU1NjQxIiksbWR4KCJwIixudWxsLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJIYWZ0dW5nc2F1c3NjaGx1c3M6IikpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiSGFmdHVuZyBmXHhGQ3IgSW5oYWx0ZSIpKSxtZHgoInAiLG51bGwsIkRpZSBJbmhhbHRlIHVuc2VyZXIgU2VpdGVuIHd1cmRlbiBtaXQgZ3JceEY2XHhERnRlciBTb3JnZmFsdCBlcnN0ZWxsdC4gRlx4RkNyIGRpZSBSaWNodGlna2VpdCwgVm9sbHN0XHhFNG5kaWdrZWl0IHVuZCBBa3R1YWxpdFx4RTR0IGRlciBJbmhhbHRlIGtceEY2bm5lbiB3aXIgamVkb2NoIGtlaW5lIEdld1x4RTRociBceEZDYmVybmVobWVuLiBBbHMgRGllbnN0ZWFuYmlldGVyIHNpbmQgd2lyIGdlbVx4RTRceERGIFx4QTcgNyBBYnMuMSBUTUcgZlx4RkNyIGVpZ2VuZSBJbmhhbHRlIGF1ZiBkaWVzZW4gU2VpdGVuIG5hY2ggZGVuIGFsbGdlbWVpbmVuIEdlc2V0emVuIHZlcmFudHdvcnRsaWNoLiBOYWNoIFx4QTdceEE3IDggYmlzIDEwIFRNRyBzaW5kIHdpciBhbHMgRGllbnN0ZWFuYmlldGVyIGplZG9jaCBuaWNodCB2ZXJwZmxpY2h0ZXQsIFx4RkNiZXJtaXR0ZWx0ZSBvZGVyIGdlc3BlaWNoZXJ0ZSBmcmVtZGUgSW5mb3JtYXRpb25lbiB6dSBceEZDYmVyd2FjaGVuIG9kZXIgbmFjaCBVbXN0XHhFNG5kZW4genUgZm9yc2NoZW4sIGRpZSBhdWYgZWluZSByZWNodHN3aWRyaWdlIFRceEU0dGlna2VpdCBoaW53ZWlzZW4uIFZlcnBmbGljaHR1bmdlbiB6dXIgRW50ZmVybnVuZyBvZGVyIFNwZXJydW5nIGRlciBOdXR6dW5nIHZvbiBJbmZvcm1hdGlvbmVuIG5hY2ggZGVuIGFsbGdlbWVpbmVuIEdlc2V0emVuIGJsZWliZW4gaGllcnZvbiB1bmJlclx4RkNocnQuIEVpbmUgZGllc2Jlelx4RkNnbGljaGUgSGFmdHVuZyBpc3QgamVkb2NoIGVyc3QgYWIgZGVtIFplaXRwdW5rdCBkZXIgS2VubnRuaXMgZWluZXIga29ua3JldGVuIFJlY2h0c3ZlcmxldHp1bmcgbVx4RjZnbGljaC4gQmVpIEJla2FubnR3ZXJkZW4gdm9uIGVudHNwcmVjaGVuZGVuIFJlY2h0c3ZlcmxldHp1bmdlbiB3ZXJkZW4gd2lyIGRpZXNlIEluaGFsdGUgdW1nZWhlbmQgZW50ZmVybmVuLiIpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiSGFmdHVuZyBmXHhGQ3IgTGlua3MiKSksbWR4KCJwIixudWxsLCJVbnNlciBBbmdlYm90IGVudGhceEU0bHQgTGlua3MgenUgZXh0ZXJuZW4gV2Vic2VpdGVuIERyaXR0ZXIsIGF1ZiBkZXJlbiBJbmhhbHRlIHdpciBrZWluZW4gRWluZmx1c3MgaGFiZW4uIERlc2hhbGIga1x4RjZubmVuIHdpciBmXHhGQ3IgZGllc2UgZnJlbWRlbiBJbmhhbHRlIGF1Y2gga2VpbmUgR2V3XHhFNGhyIFx4RkNiZXJuZWhtZW4uIEZceEZDciBkaWUgSW5oYWx0ZSBkZXIgdmVybGlua3RlbiBTZWl0ZW4gaXN0IHN0ZXRzIGRlciBqZXdlaWxpZ2UgQW5iaWV0ZXIgb2RlciBCZXRyZWliZXIgZGVyIFNlaXRlbiB2ZXJhbnR3b3J0bGljaC4gRGllIHZlcmxpbmt0ZW4gU2VpdGVuIHd1cmRlbiB6dW0gWmVpdHB1bmt0IGRlciBWZXJsaW5rdW5nIGF1ZiBtXHhGNmdsaWNoZSBSZWNodHN2ZXJzdFx4RjZceERGZSBceEZDYmVycHJceEZDZnQuIFJlY2h0c3dpZHJpZ2UgSW5oYWx0ZSB3YXJlbiB6dW0gWmVpdHB1bmt0IGRlciBWZXJsaW5rdW5nIG5pY2h0IGVya2VubmJhci4gRWluZSBwZXJtYW5lbnRlIGluaGFsdGxpY2hlIEtvbnRyb2xsZSBkZXIgdmVybGlua3RlbiBTZWl0ZW4gaXN0IGplZG9jaCBvaG5lIGtvbmtyZXRlIEFuaGFsdHNwdW5rdGUgZWluZXIgUmVjaHRzdmVybGV0enVuZyBuaWNodCB6dW11dGJhci4gQmVpIEJla2FubnR3ZXJkZW4gdm9uIFJlY2h0c3ZlcmxldHp1bmdlbiB3ZXJkZW4gd2lyIGRlcmFydGlnZSBMaW5rcyB1bWdlaGVuZCBlbnRmZXJuZW4uIiksbWR4KCJwIixudWxsLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJVcmhlYmVycmVjaHQiKSksbWR4KCJwIixudWxsLCJEaWUgZHVyY2ggZGllIFNlaXRlbmJldHJlaWJlciBlcnN0ZWxsdGVuIEluaGFsdGUgdW5kIFdlcmtlIGF1ZiBkaWVzZW4gU2VpdGVuIHVudGVybGllZ2VuIGRlbSBkZXV0c2NoZW4gVXJoZWJlcnJlY2h0LiBEaWUgVmVydmllbGZceEU0bHRpZ3VuZywgQmVhcmJlaXR1bmcsIFZlcmJyZWl0dW5nIHVuZCBqZWRlIEFydCBkZXIgVmVyd2VydHVuZyBhdVx4REZlcmhhbGIgZGVyIEdyZW56ZW4gZGVzIFVyaGViZXJyZWNodGVzIGJlZFx4RkNyZmVuIGRlciBzY2hyaWZ0bGljaGVuIFp1c3RpbW11bmcgZGVzIGpld2VpbGlnZW4gQXV0b3JzIGJ6dy4gRXJzdGVsbGVycy4gRG93bmxvYWRzIHVuZCBLb3BpZW4gZGllc2VyIFNlaXRlIHNpbmQgbnVyIGZceEZDciBkZW4gcHJpdmF0ZW4sIG5pY2h0IGtvbW1lcnppZWxsZW4gR2VicmF1Y2ggZ2VzdGF0dGV0LiBTb3dlaXQgZGllIEluaGFsdGUgYXVmIGRpZXNlciBTZWl0ZSBuaWNodCB2b20gQmV0cmVpYmVyIGVyc3RlbGx0IHd1cmRlbiwgd2VyZGVuIGRpZSBVcmhlYmVycmVjaHRlIERyaXR0ZXIgYmVhY2h0ZXQuIEluc2Jlc29uZGVyZSB3ZXJkZW4gSW5oYWx0ZSBEcml0dGVyIGFscyBzb2xjaGUgZ2VrZW5uemVpY2huZXQuIFNvbGx0ZW4gU2llIHRyb3R6ZGVtIGF1ZiBlaW5lIFVyaGViZXJyZWNodHN2ZXJsZXR6dW5nIGF1Zm1lcmtzYW0gd2VyZGVuLCBiaXR0ZW4gd2lyIHVtIGVpbmVuIGVudHNwcmVjaGVuZGVuIEhpbndlaXMuIEJlaSBCZWthbm50d2VyZGVuIHZvbiBSZWNodHN2ZXJsZXR6dW5nZW4gd2VyZGVuIHdpciBkZXJhcnRpZ2UgSW5oYWx0ZSB1bWdlaGVuZCBlbnRmZXJuZW4uIiksbWR4KCJwIixudWxsLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJEYXRlbnNjaHV0eiIpKSxtZHgoInAiLG51bGwsIkRpZSBOdXR6dW5nIHVuc2VyZXIgV2Vic2VpdGUgaXN0IGluIGRlciBSZWdlbCBvaG5lIEFuZ2FiZSBwZXJzb25lbmJlem9nZW5lciBEYXRlbiBtXHhGNmdsaWNoLiBTb3dlaXQgYXVmIHVuc2VyZW4gU2VpdGVuIHBlcnNvbmVuYmV6b2dlbmUgRGF0ZW4gKGJlaXNwaWVsc3dlaXNlIE5hbWUsIEFuc2NocmlmdCBvZGVyIGVNYWlsLUFkcmVzc2VuKSBlcmhvYmVuIHdlcmRlbiwgZXJmb2xndCBkaWVzLCBzb3dlaXQgbVx4RjZnbGljaCwgc3RldHMgYXVmIGZyZWl3aWxsaWdlciBCYXNpcy4gRGllc2UgRGF0ZW4gd2VyZGVuIG9obmUgSWhyZSBhdXNkclx4RkNja2xpY2hlIFp1c3RpbW11bmcgbmljaHQgYW4gRHJpdHRlIHdlaXRlcmdlZ2ViZW4uXG5XaXIgd2Vpc2VuIGRhcmF1ZiBoaW4sIGRhc3MgZGllIERhdGVuXHhGQ2JlcnRyYWd1bmcgaW0gSW50ZXJuZXQgKHouQi4gYmVpIGRlciBLb21tdW5pa2F0aW9uIHBlciBFLU1haWwpIFNpY2hlcmhlaXRzbFx4RkNja2VuIGF1ZndlaXNlbiBrYW5uLiBFaW4gbFx4RkNja2VubG9zZXIgU2NodXR6IGRlciBEYXRlbiB2b3IgZGVtIFp1Z3JpZmYgZHVyY2ggRHJpdHRlIGlzdCBuaWNodCBtXHhGNmdsaWNoLlxuRGVyIE51dHp1bmcgdm9uIGltIFJhaG1lbiBkZXIgSW1wcmVzc3Vtc3BmbGljaHQgdmVyXHhGNmZmZW50bGljaHRlbiBLb250YWt0ZGF0ZW4gZHVyY2ggRHJpdHRlIHp1ciBceERDYmVyc2VuZHVuZyB2b24gbmljaHQgYXVzZHJceEZDY2tsaWNoIGFuZ2Vmb3JkZXJ0ZXIgV2VyYnVuZyB1bmQgSW5mb3JtYXRpb25zbWF0ZXJpYWxpZW4gd2lyZCBoaWVybWl0IGF1c2RyXHhGQ2NrbGljaCB3aWRlcnNwcm9jaGVuLiBEaWUgQmV0cmVpYmVyIGRlciBTZWl0ZW4gYmVoYWx0ZW4gc2ljaCBhdXNkclx4RkNja2xpY2ggcmVjaHRsaWNoZSBTY2hyaXR0ZSBpbSBGYWxsZSBkZXIgdW52ZXJsYW5ndGVuIFp1c2VuZHVuZyB2b24gV2VyYmVpbmZvcm1hdGlvbmVuLCBldHdhIGR1cmNoIFNwYW0tTWFpbHMsIHZvci4iKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}