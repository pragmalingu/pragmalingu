<<<<<<< HEAD
{"remainingRequest":"/Users/miriam/pragmalingu.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/miriam/pragmalingu.github.io/docs/benchmarks/data-comparisson.md","dependencies":[{"path":"/Users/miriam/pragmalingu.github.io/docs/benchmarks/data-comparisson.md","mtime":1594108929263},{"path":"/Users/miriam/pragmalingu.github.io/.docusaurus/docusaurus-plugin-content-docs/site-docs-benchmarks-data-comparisson-md-fef.json","mtime":1595244241935},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
=======
{"remainingRequest":"/Users/miriam/pragmalingu.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/miriam/pragmalingu.github.io/docs/benchmarks/data-comparisson.md","dependencies":[{"path":"/Users/miriam/pragmalingu.github.io/docs/benchmarks/data-comparisson.md","mtime":1594108929263},{"path":"/Users/miriam/pragmalingu.github.io/.docusaurus/docusaurus-plugin-content-docs/site-docs-benchmarks-data-comparisson-md-fef.json","mtime":1595244241935},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/miriam/pragmalingu.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/miriam/pragmalingu.github.io/docs/benchmarks/data-comparisson.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'data-comparisson',\n\ttitle: 'Coparisson of Free-To-Use Data Sets',\n\tsidebar_label: 'Data Sets'\n};\nexport const metadata = {\n  \"id\": \"benchmarks/data-comparisson\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Coparisson of Free-To-Use Data Sets\",\n  \"description\": \"LISA\",\n  \"source\": \"@site/docs/benchmarks/data-comparisson.md\",\n  \"permalink\": \"/docs/benchmarks/data-comparisson\",\n  \"editUrl\": \"https://github.com/pragmalingu/pragmalingu/docs/benchmarks/data-comparisson.md\",\n  \"sidebar_label\": \"Data Sets\",\n  \"sidebar\": \"benchmark\",\n  \"previous\": {\n    \"title\": \"Overview\",\n    \"permalink\": \"/docs/benchmarks/overview\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'LISA',\n  id: 'lisa',\n  children: []\n}, {\n  value: 'NPL',\n  id: 'npl',\n  children: []\n}, {\n  value: 'CACM',\n  id: 'cacm',\n  children: []\n}, {\n  value: 'CISI',\n  id: 'cisi',\n  children: []\n}, {\n  value: 'Cranfield',\n  id: 'cranfield',\n  children: []\n}, {\n  value: 'Time',\n  id: 'time',\n  children: []\n}, {\n  value: 'Medline',\n  id: 'medline',\n  children: []\n}, {\n  value: 'ADI',\n  id: 'adi',\n  children: []\n}, {\n  value: 'Reuters 21578',\n  id: 'reuters-21578',\n  children: []\n}, {\n  value: 'OHSUMED',\n  id: 'ohsumed',\n  children: []\n}, {\n  value: 'TREC',\n  id: 'trec',\n  children: []\n}, {\n  value: 'Europarl Parallel Corpus',\n  id: 'europarl-parallel-corpus',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"lisa\"\n    }}>{`LISA`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Semantic Mapping, Document Clustering, Cross-Language Retrieval, Statistical Methods`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{` The LISA collection provided by Peter Willett of Sheffield University in 1982 is being provided to support research investigations.\nThere are clear stop marks and the data structure is easy to understand. The queries seem to be very specific and quite long.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br />{`6004 labeled abstracts are stored in files `}<inlineCode parentName=\"p\">{`LISA0.001`}</inlineCode>{` - `}<inlineCode parentName=\"p\">{`LISA5.850`}</inlineCode>{`. At the beginning of every entry there is an uniquie ID followed by the title. Some entries also contain information about author, time and place, also stored in the title line. A row of 44 x `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` seperates the entries.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`Document 5640\nNORDINFO COURSE IN BIBLIOMETRICS, 1981-10-26-29, HANASSARI, HELSINKI,\nSWEDISH-FINNISH CULTURAL CENTRE (IN SWEDISH).\n\nDESCRIBES THE DISCIPLINE OF BIBLIOMETRICS WITH REFERENCE TO A NORDINFO COURSE\nATTENDED IN HELSINKI. DEFINES BIBLIOMETRICS AS QUANTITATIVE MEASUREMENT OF\nLIBRARY TECHNIQUES. BIBLIOMETRIC METHODS CAN BE USED ON A GLOBAL SCALE, BUT\nTHEY CAN ALSO BE A TOOL TO CALCULATE THE BEST USE OF AN INDIVIDUAL LIBRARY'S\nRESOURCES. AMONG THE EMPIRICAL LAWS DEVELOPED, BRADFORD'S LAW IS THE MOST\nAPPLICABLE. DESCRIBES THE USE OF THIS LAW TO OBTAIN A GRAPH WITH AN\nEXPONENTIALLY INCREASING PART, A SO-CALLED BRADFORD GRAPH. THIS CAN SHOW THE\nRELATIONSHIP BETWEEN AUTHORS AND NUMBER OF ARTICLES, ARTICLES AND QUOTATIONS\nAND CAN HELP TO DETERMINE THE PROCESS OF OBSOLESCENCE OF LITERATURE IN A\nLIBRARY. OTHER BIBLIOMETRIC LAWS ARE THOSE OF LOTKA AND ZIPF. THE METHODS ARE\nUSEFUL IN ACQUISITION, PLANNING OF SPACE ALLOCATION, WITHDRAWALS, LIBRARY USE,\nAND OTHER AREAS OF LIBRARY ADMINISTRATION.\n********************************************\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{`35 queries are stored in file `}<inlineCode parentName=\"p\">{`lisa.que`}</inlineCode>{`. The query-ID is followed by quite long sentences which are all written from a first person perspective which express an interest in certain topics. The entries are seperated by `}<inlineCode parentName=\"p\">{`#`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`24\nI AM INTERESTED IN ALMOST ANYTHING TO DO WITH AUTOMATIC DOCUMENT\nCLASSIFICATION: SEARCH STRATEGIES FOR HIERARCHICAL AND NON-HIERARCHICAL\nCLUSTERS, CLUSTERING ALGORITHMS, THE CREATION OF CLUSTER REPRESENTATIVES,\nRETRIEVAL EXPERIMENTS USING CLUSTERED FILES AND MEASURES OF\nINTER-DOCUMENT SIMILARITY. RELATED TO THIS IS AN INTEREST IN TERM\nCLASSIFICATIONS, THEIR APPLICATION IN RETRIEVAL, INTER-TERM SIMILARITIES\nETC. AUTOMATIC DOCUMENT CLASSIFICATION, CLUSTERS, CLUSTERING, TERM\nCLASSIFICATIONS. #\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`In `}<inlineCode parentName=\"p\">{`lisarj.num`}</inlineCode>{` are the relevance assesments represented with IDs. Every query-ID (first column) is followed by document-IDs that are considered as relevant. Depending on the program used to open or parse the file the relevant document-IDs could continue in the next line. Since there is no end marker it would be best to parse the lines depending on the query-ID.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`           1           2        3392        3396                                \n           2           2        2623        4291                                \n           3           5        1407        1431        3794        3795        \n        3796                                                                    \n           4           7         604        3527        4644        5087        \n        5112        5113        5295                                            \n           5           1        3401  \n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><br />{`The `}<inlineCode parentName=\"p\">{`lisa.rel`}</inlineCode>{`file is an old version of the relevance assesments which helps to understand new version, but is not considered important to use. `}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/lisa/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/lisa/`}</a>{` `}</p>\n    <h2 {...{\n      \"id\": \"npl\"\n    }}>{`NPL`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Term Mapping, Co-occurrences, Thesaurus, Statistical Methods, Clustering`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`This collection was contributed by Vaswani and Cameron at the  National  Physical  Laboratory  in  the  UK, 1970.\nThe end marker structure is very consistent and for every file the same. Though there is not much contect to work with in a pragmatic search.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong>{`The files `}<inlineCode parentName=\"p\">{`doc-text`}</inlineCode>{` & `}<inlineCode parentName=\"p\">{`doc-vecs`}</inlineCode>{` contain 11,429 titles and/or abstracts with an unique ID in text form and as a vector representation of the terms. Every entry ends with `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`141\nsome aspects of the logical and circuit design of a digital field\ncomputer  a new type of digital computer for the solution of field\nproblems is described  by making calculations at all the lattice\npoints of the field simultaneously computation time is greatly reduced\nan experimental design of a basic unit for potential and other problems\nis presented\n   /\n`}</code></pre>\n    <p><em parentName=\"p\">{`Same text represented as vector but in a diffrent order and without irrelevant terms:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`141     3     5     7    23    27    33    34    42    54    71\n  101   109   155   161   162   224   272   304   315   345\n  534   582   597   626  1215 /\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{` 93 queries are stored in `}<inlineCode parentName=\"p\">{`query-text`}</inlineCode>{` & `}<inlineCode parentName=\"p\">{`query-vecs`}</inlineCode>{` as text and as vector representation. The ID is followed by the query and the entry is marked with `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` at the end.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`3\nUSE OF DIGITAL COMPUTERS IN THE DESIGN OF BAND PASS FILTERS HAVING GIVEN PHASE AND ATTENUATION CHARACTERISTICS\n/\n`}</code></pre>\n    <p><em parentName=\"p\">{`Same query represented as vector but in a diffrent order and without irrelevant terms:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`  3  1  10  23  35  71  76  77  97  191  224\n  309  360 /\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`In `}<inlineCode parentName=\"p\">{`rlv-ass`}</inlineCode>{` are query IDs followed by relevant documents with `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` as an end marker.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`3\n  141   148   813  1610  2429  3059  3272  3398  3614  3688\n 3708  4437  4710  4725  4833  5476  5662  5856  5976  6351\n 6885  6974  7086  7177  7304  7571  8007  8232  8957  9289\n10174 10484 10486\n   /\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`term-vocab`}</inlineCode>{` contains vocabular stems with representative IDs, the end marker is `}<inlineCode parentName=\"li\">{`/`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`term-vecs`}</inlineCode>{` contains occurrences of the terms in docs. First ID is always vocab ID followed by all the doc IDs terms occurred in, the end marker is `}<inlineCode parentName=\"li\">{`/`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`term-mst`}</inlineCode>{` contains word ID followed by context-word ID followed by co.occurrences and mutal similarity values. This is only available for words that occurre in at least 2 documents`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Source:`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/npl/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/npl/`}</a></p>\n    <h2 {...{\n      \"id\": \"cacm\"\n    }}>{`CACM`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Semantic Connections, Cross-connections, Word-Embeddings`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`CACM is a collection of article abstracts published in ACM journal between 1958 and 1979.\nMost papers claim that it's too small to observe real impact.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br />{`In `}<inlineCode parentName=\"p\">{`cacm.all`}</inlineCode>{` are 3,204 labled entries. Each lable is marked specifically with a `}<inlineCode parentName=\"p\">{`.`}</inlineCode>{` followed by a letter. They appear in an entry in following order:`}<br />{`\n(.I) ID `}<br />{`\n(.T) Title `}<br />{`\n(.W) Abstract `}<br />{`\n(.B) Publication date of the article `}<br />{`\n(.A) Author list `}<br />{`\n(.N) Information when entry was added `}<br />{`\n(.X) List of cross-references to other documents `}<br /></p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 46\n.T\nMultiprogramming STRETCH: Feasibility Considerations\n.W\nThe tendency towards increased parallelism in\ncomputers is noted.  Exploitation of this parallelism \npresents a number of new problems in machine design\nand in programming systems.  Minimum requirements \nfor successful concurrent execution of several independent\nproblem programs are discussed.  These requirements \nare met in the STRETCH system by a carefully balanced\ncombination of built-in and programmed logic.  \nTechniques are described which place the burden of the\nprogrammed logic on system programs (supervisory \nprogram and compiler) rather than on problem programs.\n.B\nCACM November, 1959\n.A\nCodd, E. F.\nLowry, E. S.\nMcDonough, E.\nScalzi, C. A.\n.N\nCA591102 JB March 22, 1978  3:57 PM\n.X\n168 5   46\n491 5   46\n46  5   46\n168 6   46\n`}</code></pre>\n    <p>{`The list of cross-references show the refrences ID followed by `}<inlineCode parentName=\"p\">{`4, 5 or 6`}</inlineCode>{`and marked with the doc-ID at the end. The three numbers can define the refrences more precisely:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`4 : \"bibliographic coupling\" - if document id Y appears in the bibliographic\n    coupling subvector for document X with a weight of w, it means X\n    and Y have w common references in their bibliographies; the weight\n    of did X in the vector for X is the number of items in X's bibliography.\n5 : \"links\" - documents X and Y are linked if X cites Y, Y cites X, or\n    X == Y.\n6 : \"co-citations\" - if document id Y appears in the co-citation subvector\n    for document X with weight w, it means X and Y are cited together in\n    w documents; the weight of did X in the vector for X is the number\n    of documents that cite X.\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br /><inlineCode parentName=\"p\">{`query.text`}</inlineCode>{` contains 64 query sentences which also contain the same markers as the text.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 10\n.W\n Parallel languages; languages for parallel computation\n.N\n 10. Alec Grimison, Comp Serv, Uris Hall (parallel lang)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`In `}<inlineCode parentName=\"p\">{`qrels.text`}</inlineCode>{` query ID is followed by doc-ID followed by 0 int and 0.0 float, every doc has it's own row. Could be used as trainable vectors.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`10 0046  0 0\n10 0141  0 0\n10 0392  0 0\n10 0950  0 0\n10 1158  0 0\n10 1198  0 0\n10 1262  0 0\n10 1380  0 0\n10 1471  0 0\n10 1601  0 0\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cite.info`}</inlineCode>{` - Key to citation info`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`common_words`}</inlineCode>{` - Stop words used by smart`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`qrels.text`}</inlineCode>{` - List of relevance judgements`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/cacm/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/cacm/`}</a></p>\n    <h2 {...{\n      \"id\": \"cisi\"\n    }}>{`CISI`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Semantic Mapping, Document Clustering, Cross-connections, Word-Embeddings`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`The CISI collection is very similar to CACM collection, it uses the same notations.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br /><inlineCode parentName=\"p\">{`CISI.ALL`}</inlineCode>{` contains 1,460 texts. For detailed explaination on the notation see the `}<inlineCode parentName=\"p\">{`CACM`}</inlineCode>{` section.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 6\n.T\nAbstracting Concepts and Methods\n.A\nBorko, H.\n.W\n     Graduate library school study of abstracting should be more than a \nhow-to-do-it course.\nIt should include general material on the characteristcs and types of abstracts,\nthe historical development of abstracting publications, the abstract-publishing\nindustry (especially in the United States), and the need for standards in the\npreparation and evaluation of the product.\nThese topics we call concepts.\n     The text includes a methods section containing instructions for writing\nvarious types of abstracts, and for editing and preparing abstracting publications.\nThese detailed instructions are supplemented by examples and exercises in the\nappendix.\nThere is a brief discussion of indexing of abstract publications.\n     Research on automation has been treated extensively in this work, for we\nbelieve that the topic deserves greater emphasis than it has received in the\npast.\nComputer use is becoming increasingly important in all aspects of librarianship.\nMuch research effort has been expended on the preparation and evaluation of\ncomputer-prepared abstracts and extracts.\nStudents, librarians, and abstractors will benefit from knowing about this\nresearch and understanding how computer programs were researched to analyze text,\nselect key sentences, and prepare extracts and abstracts.\nThe benefits of this research are discussed.\n    Abstracting is a key segment of the information industry.\nOpportunities are available for both full-time professionals and part-time or\nvolunteer workers.\nMany librarians find such activities pleasant and rewarding, for they know\nthey are contributing to the more effective use of stored information.\nOne chapter is devoted to career opportunities for abstractors.\n.X\n6 6 6\n363 1 6\n403 1 6\n461 1 6\n551 1 6\n551 1 6\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{`112 queries are stored in `}<inlineCode parentName=\"p\">{`CISI.QRY`}</inlineCode>{`. The notation is the same as in CAMC.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 21\n.W\nThe need to provide personnel for the information field.\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`In `}<inlineCode parentName=\"p\">{`CISI.REL`}</inlineCode>{` query ID is followed by doc-ID followed by 0 int and 0.0 float, every doc has it's own row. Could be used as trainable vectors.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`    21      6 0 0.000000\n    21     14 0 0.000000\n    21     22 0 0.000000\n    21     85 0 0.000000\n    21    171 0 0.000000\n    21    185 0 0.000000\n    21    186 0 0.000000\n    21    303 0 0.000000\n    21    339 0 0.000000\n    21    392 0 0.000000\n    21    400 0 0.000000\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><br /><inlineCode parentName=\"p\">{`CISI.BLN`}</inlineCode>{` - List of boolean queries `}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/cisi/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/cisi/`}</a></p>\n    <h2 {...{\n      \"id\": \"cranfield\"\n    }}>{`Cranfield`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Cross-Connections, Semantic Mapping, Document Clustering`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`Uses same notation as `}<inlineCode parentName=\"p\">{`CACM`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CISI`}</inlineCode>{`. But the relevance evaulation are more detailed and more specific to the query tasks. To Use this collection it is important to note, that the ID of the queries `}<inlineCode parentName=\"p\">{`.I 002`}</inlineCode>{` isn't the same the query-ID used in the Relevance Assesments, it seems that the query-IDs come from the order in the file. It could be helpful to update the IDs before working with it to avoid confusion.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br /><inlineCode parentName=\"p\">{`cran.all`}</inlineCode>{` holds 1,400 documents, for detailed notation see `}<inlineCode parentName=\"p\">{`CACM`}</inlineCode>{`section. In contrast to `}<inlineCode parentName=\"p\">{`CACM`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CISI`}</inlineCode>{` there are no cross-references to other documents listed.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 5\n.T\none-dimensional transient heat conduction into a double-layer\nslab subjected to a linear heat input for a small time\ninternal .\n.A\nwasserman,b.\n.B\nj. ae. scs. 24, 1957, 924.\n.W\none-dimensional transient heat conduction into a double-layer\nslab subjected to a linear heat input for a small time\ninternal .\n  analytic solutions are presented for the transient heat\nconduction in composite slabs exposed at one surface to a\ntriangular heat rate .  this type of heating rate may occur, for\nexample, during aerodynamic heating .\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{`225 qeries are stored in `}<inlineCode parentName=\"p\">{`cran.qury`}</inlineCode>{`. Mostly questions, some of the queries are term searches. The ID at the beginning of every query isn't the refrence ID which is used in `}<inlineCode parentName=\"p\">{`cranqrel`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 004\n.W\nwhat problems of heat conduction in composite slabs have been solved so\nfar .\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`Every row in `}<inlineCode parentName=\"p\">{`cranqrel`}</inlineCode>{` holds query ID, relevant document ID and the relevancy code (1,2,3,4 or 5). Every document has it's own row. The relevancy code is defined as follows:`}</p>\n    <p>{`1 =  References which are a complete answer to the question.`}<br />{`\n2 =  References of a high degree of relevance, the lack of which\n`}{` `}{` `}{` `}{` `}{` `}{` `}{` `}{`either would have made the research impracticable or would\n`}{` `}{` `}{` `}{` `}{` `}{` `}{` `}{`have resulted in a considerable amount of extra work.`}<br />{`\n3 =  References which were useful, either as general background\n`}{` `}{` `}{` `}{` `}{` `}{` `}{` `}{`to the work or as suggesting methods of tackling certain\n`}{` `}{` `}{` `}{` `}{` `}{` `}{` `}{`aspects of the work.`}<br />{`\n4 =  References of minimum interest, for example, those that have\n`}{` `}{` `}{` `}{` `}{` `}{` `}{` `}{`been included from an historical viewpoint.`}<br />{`\n5 =  References of no interest.`}<br /></p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`3 5 3 \n3 6 3 \n3 90 3 \n3 91 3 \n3 119 3 \n3 144 3 \n3 181 3 \n3 399 3 \n3 485 -1\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/cran/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/cran/`}</a></p>\n    <h2 {...{\n      \"id\": \"time\"\n    }}>{`Time`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Statistical Methods, Topic Clustering`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{` This collection contains 423 articles from the TIME Magazine of the 1960's. With only 423 documents  it's a rather small data set. Problem with the labeling is once again, that the ID used in the relevance assesments aren't identical with the unique text numbers, that mark the start of a document. `}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br /><inlineCode parentName=\"p\">{`TIME.ALL`}</inlineCode>{` stores 423 documents, where the first one is labled as `}<inlineCode parentName=\"p\">{`*TEXT 017`}</inlineCode>{` and the last one `}<inlineCode parentName=\"p\">{`*TEXT 563`}</inlineCode>{`. Every document starts with a line that specifies text number, date and page number. After that line follow sentences of unlabled text. The example is shortend because the articles are quite long.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`*TEXT 017 01/04/63 PAGE 020\n\nTHE ALLIES AFTER NASSAU IN DECEMBER 1960, THE U.S . FIRST\n\nPROPOSED TO HELP NATO DEVELOP ITS OWN NUCLEAR STRIKE FORCE . BUT EUROPE\n\nMADE NO ATTEMPT TO DEVISE A PLAN . LAST WEEK, AS THEY STUDIED THE\n\nNASSAU ACCORD BETWEEN PRESIDENT KENNEDY AND PRIME MINISTER MACMILLAN,\n\nEUROPEANS SAW EMERGING THE FIRST OUTLINES OF THE NUCLEAR NATO THAT THE\n\nU.S . WANTS AND WILL SUPPORT . IT ALL SPRANG FROM THE ANGLO-U.S .\n\nCRISIS OVER CANCELLATION OF THE BUG-RIDDEN SKYBOLT MISSILE, AND THE\n\nU.S . OFFER TO SUPPLY BRITAIN AND FRANCE WITH THE PROVED POLARIS (TIME,\n\nDEC . 28) . THE ONE ALLIED LEADER WHO UNRESERVEDLY WELCOMED THE POLARIS\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{`The 83 queries stored in `}<inlineCode parentName=\"p\">{`TIME.QUE`}</inlineCode>{` are marked with `}<inlineCode parentName=\"p\">{`*FIND`}</inlineCode>{`followed by thr query ID.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`*FIND     46\n\n PRESIDENT DE GAULLE'S POLICY ON BRITISH ENTRY INTO THE\n\nCOMMON MARKET .\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`Every row of `}<inlineCode parentName=\"p\">{`TIME.REL`}</inlineCode>{` shows query ID followed by relevant docs IDs. The doc IDs are not the same as the text numbers. The IDs are representative for the order in the `}<inlineCode parentName=\"p\">{`TIME.ALL`}</inlineCode>{` file.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`46   1  20  23  32  39  47  53  54  80  93 151 157 174 202 272 291 294 348\n\n47  23  47  48  53  54  56\n\n48 306\n\n49  47  56  81 103 150 183 205 291\n\n50 157\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><br /><inlineCode parentName=\"p\">{`TIME.STP`}</inlineCode>{` - List of stop words`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/time/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/time/`}</a></p>\n    <h2 {...{\n      \"id\": \"medline\"\n    }}>{`Medline`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Semantic Mapping, Topic Search, Semantic Similarity`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`A document collection of short medical articals with very specific queries. `}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br /><inlineCode parentName=\"p\">{`MED.ALL`}</inlineCode>{` holds 1,033 articles with a notation similar to `}<inlineCode parentName=\"p\">{`Cranfield`}</inlineCode>{` but with less information. Only the document ID (.I) and the text (.W) are marked. `}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 1\n.W\ncorrelation between maternal and fetal plasma levels of glucose and free\nfatty acids .                                                           \n  correlation coefficients have been determined between the levels of   \nglucose and ffa in maternal and fetal plasma collected at delivery .    \nsignificant correlations were obtained between the maternal and fetal   \nglucose levels and the maternal and fetal ffa levels . from the size of \nthe correlation coefficients and the slopes of regression lines it      \nappears that the fetal plasma glucose level at delivery is very strongly\ndependent upon the maternal level whereas the fetal ffa level at        \ndelivery is only slightly dependent upon the maternal level . \n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{` 30 pretty specific queries are stored in `}<inlineCode parentName=\"p\">{`MED.QRY`}</inlineCode>{`. The notation is (.I) for the query ID and (.W) for the query text. More than one sentence is possible and can be seperated with `}<inlineCode parentName=\"p\">{`.`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 5\n.W\n the crossing of fatty acids through the placental barrier.  normal\nfatty acid levels in placenta and fetus.\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{` In every row of `}<inlineCode parentName=\"p\">{`MED.REL`}</inlineCode>{` the query ID is followed by a `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` which seperates it from the relevant doc ID. At the end of every row is a `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{`. There is a row for every query ID in combination with the relevant doc ID.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`5 0 1 1\n5 0 2 1\n5 0 4 1\n5 0 5 1\n5 0 6 1\n5 0 7 1\n5 0 8 1\n5 0 9 1\n5 0 10 1\n5 0 11 1\n5 0 12 1\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><br />{`(MED.REL.OLD) - older version of Relevance assesments, here the IDs are followed by `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`and `}<inlineCode parentName=\"p\">{`0.000000`}</inlineCode>{` which could be used as trainable embeddings.`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/medl/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/medl/`}</a></p>\n    <h2 {...{\n      \"id\": \"adi\"\n    }}>{`ADI`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br /></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`An extremly small data set with not even 100 examples, doesn't seem to be good for any use except for experimenting with machine learining on small data sets.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br /><inlineCode parentName=\"p\">{`ADI.ALL`}</inlineCode>{` contains 83 documents with the same notation as `}<inlineCode parentName=\"p\">{`Cranfield`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 3\n.T\nan important need and opportunity for a. d. i. leadership\nin information science education .\n.A\nR. L. TAYLOR\n.W\ncurrent trends in information science education\nappear inadequate for the important need of the nation's\npracticing professional personnel for training in becoming\ninformation specialists or more proficient users of\n information systems .  a particular educational program\n by a. d. i. is suggested to supplement others in meeting\n this presumptive need .\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br /><inlineCode parentName=\"p\">{`ID (.I)`}</inlineCode>{`holds 35 short queries that seem to be test questions.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`.I 3\n.W\nWhat is information science?  Give definitions where possible.\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong><br />{`The relevance assesments given in `}<inlineCode parentName=\"p\">{`ADI.REL`}</inlineCode>{` are in the same format as `}<inlineCode parentName=\"p\">{`CISI`}</inlineCode>{` & `}<inlineCode parentName=\"p\">{`CACM`}</inlineCode>{`. Query ID followed by relevant doc ID followed by 0 and 0.0. Could be used to create trainable vectors.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`3   3   0   0.000000   \n3   43   0   0.000000   \n3   45   0   0.000000   \n3   60   0   0.000000   \n4   29   0   0.000000   \n4   63   0   0.000000   \n5   3   0   0.000000   \n`}</code></pre>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><br /><inlineCode parentName=\"p\">{`ADI.BLN`}</inlineCode>{` - List of boolean queries`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://ir.dcs.gla.ac.uk/resources/test_collections/adi/\"\n      }}>{`http://ir.dcs.gla.ac.uk/resources/test_collections/adi/`}</a></p>\n    <h2 {...{\n      \"id\": \"reuters-21578\"\n    }}>{`Reuters 21578`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Document Similarity, Document Clustering, Word Sense Disambiguation`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{` This collection was originally collected and labeled by Carnegie Group, Inc. and Reuters, Ltd. In the `}<inlineCode parentName=\"p\">{`README.txt`}</inlineCode>{` file are further informations documented. `}<br />{`\nThe files are in SGML format, so it's useful to get familiar with that language first.\nIt's already split in Training and Test sets by the tag `}<inlineCode parentName=\"p\">{`LEWISSPLIT`}</inlineCode>{`, also topics and relations between the topics are documented which makes this collectiojn a very usefull one for pragmatic search development. But it has to be noted that only half of the documents were manually assigned to topics, so there are unlabled documents which are marked by `}<inlineCode parentName=\"p\">{`LEWISSPLIT=\"NOT-USED\"`}</inlineCode>{`.`}<br />{`\nThe collection is a multi-labled one, so one document can be assigned to more than one topic.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br />{`\nThe files `}<inlineCode parentName=\"p\">{`reut2-000.sgm`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`reut2-021.sgm`}</inlineCode>{` contain 21.578 documents that are in SGML format. The start of every document is marked with\n`}<inlineCode parentName=\"p\">{`<!DOCTYPE lewis SYSTEM \"lewis.dtd\">`}</inlineCode>{`\nThe entries are clearly distinctable by their notation.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`<REUTERS TOPICS=\"BYPASS\" LEWISSPLIT=\"TRAIN\" CGISPLIT=\"TRAINING-SET\" OLDID=\"2984\" NEWID=\"14001\">\n<DATE> 7-APR-1987 11:02:35.07</DATE>\n<TOPICS></TOPICS>\n<PLACES></PLACES>\n<PEOPLE></PEOPLE>\n<ORGS></ORGS>\n<EXCHANGES></EXCHANGES>\n<COMPANIES></COMPANIES>\n<UNKNOWN> \n&#5;&#5;&#5;E\n&#22;&#22;&#1;f1137&#31;reute\nb f BC-JOHANNESBURG-GOLD-SHA   04-07 0120</UNKNOWN>\n<TEXT>&#2;\n<TITLE>JOHANNESBURG GOLD SHARES CLOSE MIXED TO FIRMER</TITLE>\n<DATELINE>    JOHANNESBURG, April 7 - </DATELINE><BODY>Gold share prices closed mixed to\nslightly firmer in quiet and cautious trading, showing little\nreaction to a retreat in the bullion price back to below 420\ndlrs and a firmer financial rand, dealers said.\n    Heavyweight Vaal Reefs ended eight rand higher at 398 rand\nbut Grootvlei eased 40 cents at 16.60 rand, while mining\nfinancials had Gold Fields up a rand at 63 rand despite weaker\nquarterly results. Other minings were firm but platinums eased.\n    Industrials also closed mixed to firmer, the index once\nagain hitting a new high of 1757 from Friday's 1753 finish. The\noverall index also hit a new high of 2188 versus 2179 on\nFriday.\n REUTER\n&#3;</BODY></TEXT>\n</REUTERS>\n`}</code></pre>\n    <p>{`The attributes specified after `}<inlineCode parentName=\"p\">{`<REUTERS`}</inlineCode>{` are meant to identify documents and groups of\ndocuments, and have the following meanings: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    1. TOPICS : The possible values are YES, NO, and BYPASS:\n        a. YES indicates that (in the original data) there was at\n        least one entry in the TOPICS fields.\n        b. NO indicates that (in the original data) the story had no\n        entries in the TOPICS field.\n        c. BYPASS indicates that (in the original data) the story was\n        marked with the string \"bypass\" (or a typographical variant on that\n        string).\n        Altough this shouldn't be used for Topic search because there could be topics if there is a no even so no if theres a yes\n\n    2. LEWISSPLIT : The possible values are TRAINING, TEST, and\n        NOT-USED.  TRAINING indicates it was used in the training set in the\n        experiments reported in LEWIS91d (Chapters 9 and 10), LEWIS92b,\n        LEWIS92e, and LEWIS94b.  TEST indicates it was used in the test set\n        for those experiments, and NOT-USED means it was not used in those\n        experiments.\n\n     3. CGISPLIT : The possible values are TRAINING-SET and\n        PUBLISHED-TESTSET indicating whether the document was in the training\n        set or the test set for the experiments reported in HAYES89 and\n        HAYES90b.\n\n     4. OLDID : The identification number (ID) the story had in the\n        Reuters-22173 collection.\n\n     5. NEWID : The identification number (ID) the story has in the\n        Reuters-21578, Distribution 1.0 collection.  These IDs are assigned to\n        the stories in chronological order.\n`}</code></pre>\n    <p>{`For more detailed describtions see the `}<inlineCode parentName=\"p\">{`VI. Formatting `}</inlineCode>{` section of the `}<inlineCode parentName=\"p\">{`README.txt`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Queries:`}</strong><br />{`There are no queries, but there are several files which contain the topics, places, people, etc. as strings. See `}<inlineCode parentName=\"p\">{`Other files`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><br />{`\n`}<inlineCode parentName=\"p\">{`all-exchanges-strings.lc.txt`}</inlineCode>{` - Alphabetical list of exchange categories`}<br />{`\n`}<inlineCode parentName=\"p\">{`all-orgs-strings.lc.txt`}</inlineCode>{` - Alphabetical list of organization categories`}<br />{`\n`}<inlineCode parentName=\"p\">{`all-people-strings.lc.txt`}</inlineCode>{` - Alphabetical list of names`}<br />{`\n`}<inlineCode parentName=\"p\">{`all-places-strings.lc.txt`}</inlineCode>{` - Alphabetical list of places`}<br />{`\n`}<inlineCode parentName=\"p\">{`all-topics-strings.lc.txt`}</inlineCode>{` - Alphabetical list of topics`}<br /></p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`acq\nalum\naustdlr\naustral\nbarley\nbfr\nbop\ncan\ncarcass\ncastor-meal\ncastor-oil\ncastorseed\ncitruspulp\ncocoa\ncoconut\ncoconut-oil\ncoffee\ncopper\ncopra-cake\ncorn\ncorn-oil\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`cat-descriptions_120396.txt`}</inlineCode>{` - List of categories with number of items labeled with them\n`}<em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`**Currency Codes (27)\n\nU.S. Dollar (DLR)\nAustralian Dollar (AUSTDLR)\nHong Kong Dollar (HK)\nSingapore Dollar (SINGDLR)\nNew Zealand Dollar (NZDLR)\nCanadian Dollar (CAN)\nSterling (STG)\nD-Mark (DMK)\nJapanese Yen (YEN)\nSwiss Franc (SFR)\nFrench Franc (FFR)\nBelgian Franc (BFR)\nNetherlands Guilder/Florin (DFL)\nItalian Lira (LIT)\nDanish Krone/Crown (DKR)\nNorwegian Krone/Crown (NKR)\nSwedish Krona/Crown (SKR)\nMexican Peso (MEXPESO)\nBrazilian Cruzado (CRUZADO)\nArgentine Austral (AUSTRAL)\nSaudi Arabian Riyal (SAUDRIYAL)\nSouth African Rand (RAND)\nIndonesian Rupiah (RUPIAH)\nMalaysian Ringitt (RINGGIT)\nPortuguese Escudo (ESCUDO)\nSpanish Peseta (PESETA)\nGreek Drachma (DRACHMA)\n\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://www.daviddlewis.com/resources/testcollections/reuters21578/\"\n      }}>{`http://www.daviddlewis.com/resources/testcollections/reuters21578/`}</a><br />{`\n(if the original source isn't available on the website of Alessandro Moschitti at University of Trento are download links for OHSUMED and Reuters `}<a parentName=\"p\" {...{\n        \"href\": \"http://disi.unitn.eu/moschitti/corpora.htm\"\n      }}>{`http://disi.unitn.eu/moschitti/corpora.htm`}</a>{`)`}</p>\n    <h2 {...{\n      \"id\": \"ohsumed\"\n    }}>{`OHSUMED`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{` SVM, Clustering, Semantic Search`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{` This collection originally created by William Hersh as a new large medical test collection for experiments on the SMART retrieval system, was splited into a Training and a Test set later. `}<br />{`\nThe splited documents contain 20.000 abtracts, the unsplited 50.216. Both collections are sorted into 23 medical categories. Since the offical source doesn't seem to be online right now, we will refer to the download files by Alessandro Moschitti.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br /><inlineCode parentName=\"p\">{`Cardiocascular diseases abstract`}</inlineCode>{` contains 20.000 documents splitted into Training and Test set directories. Inside those directories there are 23 folders which represent the 23 categories the abstracts are assigned to. Every document is written in a file without special notation.`}</p>\n    <p><em parentName=\"p\">{`Example:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`Haemophilus influenzae meningitis with prolonged hospital course.\n A retrospective evaluation of Haemophilus influenzae type b meningitis observed over a 2-year period documented 86 cases.\n Eight of these patients demonstrated an unusual clinical course characterized by persistent fever (duration: greater than 10 days), cerebrospinal fluid pleocytosis, profound meningeal enhancement on computed tomography, significant morbidity, and a prolonged hospital course.\n The mean age of these 8 patients was 6 months, in contrast to a mean age of 14 months for the entire group.\n Two patients had clinical evidence of relapse.\n Four of the 8 patients tested for latex particle agglutination in the cerebrospinal fluid remained positive after 10 days.\n All patients received antimicrobial therapy until they were afebrile for a minimum of 5 days.\n Subsequent neurologic examination revealed a persistent seizure disorder in 5 patients (62.5%), moderate-to-profound hearing loss in 2 (25%), mild ataxia in 1 (12.5%), and developmental delay with hydrocephalus which required shunting in 1 (12.5%).\n One patient had no sequelae.\n`}</code></pre>\n    <p>{`The download link `}<inlineCode parentName=\"p\">{`All Cardiovascular diseases abstracts`}</inlineCode>{` contain 50.216 abstracts which are just sorted by the 23 category folders.`}</p>\n    <p><strong parentName=\"p\">{`Queries:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Other files:`}</strong><inlineCode parentName=\"p\">{`Category Description`}</inlineCode>{` - Defines the 23 categries`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong>{`ftp://medir.ohsu.edu/pub/ohsumed `}<br />{`\n(if the original source isn't available on the website of Alessandro Moschitti at University of Trento are download links for OHSUMED and Reuters `}<a parentName=\"p\" {...{\n        \"href\": \"http://disi.unitn.eu/moschitti/corpora.htm\"\n      }}>{`http://disi.unitn.eu/moschitti/corpora.htm`}</a>{`)`}</p>\n    <h2 {...{\n      \"id\": \"trec\"\n    }}>{`TREC`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br /></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{`TREC (the TExt REtrieval Conference) isn't just one collection, it's a conference which is held regullary since 1992. The TREC workshop series - among other goals - tries to encourage research in IR based on large test collections and increase the communication aroung the IR research and development topic.`}</p>\n    <br /><br />\nIt has produced many test collections, which all contain a set of documents, a set of topics (questions) and a set of relevance judgments (answers). The collections can be downloaded from the TREC website but are usually copyrighted and must be licensed. The process to licence a collection can be found on the data page entry for the collection of interest (https://trec.nist.gov/data.html).<br />\nThe collections cover various interests like 'Chemical IR','Converstional Assistance','Legal','Medical','News','Spoken Document Retrieval', etc.\n    <br /><br />\nWhat's  very interesting about this collection is, that it is constantly growing and has high standards to have a homogenous notation. This can be very helpful for developing and testing NLP processing algorithms.\nThey also provide tools to process the data.<br />\nPublications about TREC are published by NIST (National Insitute of Standards an Technology) and accessable here: http://trec.nist.gov/pubs.html<br />\n    <br />\nSince there are many diffrent data sets, there are no examples given for this collection.\n \n**Documents:** -\n    <p><strong parentName=\"p\">{`Queries:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Other files:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"https://trec.nist.gov/\"\n      }}>{`https://trec.nist.gov/`}</a></p>\n    <h2 {...{\n      \"id\": \"europarl-parallel-corpus\"\n    }}>{`Europarl Parallel Corpus`}</h2>\n    <p><strong parentName=\"p\">{`Use Cases:`}</strong><br />{`Word Sense Disambiguation, Anaphora Resolution, Information Extraction`}</p>\n    <p><strong parentName=\"p\">{`Description:`}</strong><br />{` Starting in 2001 the corpus collected texts with up to 60 Million words per language. From the proceedings of the European Parlaiment were texts extracted for this 21 European languages: `}<br />{`\nRomanic (French, Italian, Spanish, Portuguese, Romanian), Germanic (English, Dutch, German, Danish, Swedish), Slavik (Bulgarian, Czech, Polish, Slovak, Slovene), Finni-Ugric (Finnish, Hungarian, Estonian), Baltic (Latvian, Lithuanian), and Greek.`}</p>\n    <p><strong parentName=\"p\">{`Documents:`}</strong><br />{`Every file has the structure, there are sections seperated with the tag `}<inlineCode parentName=\"p\">{`<CHAPTER ID=?>`}</inlineCode>{` which are followed by the title of the chapter. The `}<inlineCode parentName=\"p\">{`<SPEAKER ID =??>`}</inlineCode>{` is a unique ID which marks the spoken part. `}</p>\n    <p><em parentName=\"p\">{`Example from the English Corpus:`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`<CHAPTER ID=6>\nSocial and economic situation and development of the regions of the Union\n<SPEAKER ID=80 NAME=\"President\">\nThe next item is the debate on the report (A5-0107/1999) by Mr Berend, on behalf of the Committee on Regional Policy, Transport and Tourism, on the sixth periodic report on the social and economic situation and development of the regions of the European Union [SEC(99)0066 - C5-0120/99 - 1999/2123(COS)].\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Queries:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Relevance assesments:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Other files:`}</strong>{` -`}</p>\n    <p><strong parentName=\"p\">{`Source:`}</strong><a parentName=\"p\" {...{\n        \"href\": \"http://www.statmt.org/europarl/\"\n      }}>{`http://www.statmt.org/europarl/`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
>>>>>>> 8e3d5c5b6e0e03b206b681ad6abe3108a503dfc7
